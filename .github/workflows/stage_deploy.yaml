name: Project stage deploy

on:
  workflow_run:
    workflows:
      - Build and push Docker image
    types:
      - completed

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: adaptive_hockey_federation
  DEPLOY_PATH: adaptive_hockey_federation

defaults:
  run:
    working-directory: .

jobs:
  pytest:
    runs-on: ubuntu-latest
    name: pytest
    steps:
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          poetry-version: 1.5.0

      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          poetry install
      - name: pytest
        run: |
          poetry run pytest
        working-directory: adaptive_hockey_federation

  deploy:
    name: Deploy changes on server
    runs-on: ubuntu-latest
    environment:
      name: stage_deploy
    needs: pytest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: dev

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "${{ secrets.SSH_KNOWN_HOSTS }}" > ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Create folder for deploy
        run: ssh ${{ secrets.USERNAME }}@${{ secrets.HOST }} mkdir -p ${{ env.DEPLOY_PATH }}/infra

      - name: Copy dev folder to VPS
        run: scp -r $GITHUB_WORKSPACE/infra/stage/ ${{ secrets.USERNAME }}@${{ secrets.HOST }}:${{ env.DEPLOY_PATH }}/infra/

      - name: Execute commands on VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ env.DEPLOY_PATH }}

            rm .env
            touch .env

            echo HOST_NG=${{ secrets.HOST_NG }} >> .env
            echo PORT_NG=${{ secrets.PORT_NG }} >> .env
            echo IMAGE_COMPOSE=${{ secrets.IMAGE_COMPOSE }} > .env

            echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
            echo DEBUG=${{ secrets.DEBUG }} >> .env
            echo ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }} >> .env

            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env

            cd infra/stage/
            docker system prune --force

            # Installing defend service for app
            sudo cp -f /home/developer/adaptive_hockey_federation/infra/stage/adaptive_hockey_federation.service /etc/systemd/system/adaptive_hockey_federation.service
            sudo systemctl daemon-reload
            sudo systemctl restart adaptive_hockey_federation.service

            sleep 10
            docker exec adaptive_hockey_federation python manage.py migrate
            docker exec adaptive_hockey_federation python manage.py collectstatic --noinput
