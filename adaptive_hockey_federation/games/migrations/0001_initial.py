# Generated by Django 4.2.13 on 2024-06-03 13:20

import core.constants
import core.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.functions.datetime
import games.constants


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("competitions", "0004_competition_disciplines"),
    ]

    operations = [
        migrations.CreateModel(
            name="Game",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=core.constants.UserConstans["NAME_MAX_LENGTH"],
                        verbose_name="Название игры",
                    ),
                ),
                (
                    "date",
                    models.DateTimeField(
                        validators=[core.validators.validate_game_date],
                        verbose_name="Дата игры",
                    ),
                ),
                (
                    "video_link",
                    models.URLField(blank=True, verbose_name="Ссылка на видео"),
                ),
                (
                    "competition",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="competitions.competition",
                        verbose_name="Соревнование",
                    ),
                ),
            ],
            options={
                "verbose_name": "Игра",
                "verbose_name_plural": "Игры",
                "ordering": ("name",),
                "default_related_name": "games",
            },
        ),
        migrations.CreateModel(
            name="GameTeam",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=core.constants.UserConstans["NAME_MAX_LENGTH"],
                        verbose_name="Название команды",
                    ),
                ),
                (
                    "discipline_name",
                    models.CharField(
                        max_length=core.constants.UserConstans["NAME_MAX_LENGTH"],
                        verbose_name="Дисциплина",
                    ),
                ),
                (
                    "game",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="games.game",
                        verbose_name="Игра",
                    ),
                ),
            ],
            options={
                "verbose_name": "Команда, участвующая в игре",
                "verbose_name_plural": "Команды, участвующие в игре",
                "ordering": ("name",),
                "default_related_name": "game_teams",
            },
        ),
        migrations.CreateModel(
            name="GamePlayer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=core.constants.UserConstans["NAME_MAX_LENGTH"],
                        verbose_name="Игрок",
                    ),
                ),
                (
                    "number",
                    models.PositiveSmallIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(
                                games.constants.NumericalValues[
                                    "GAME_MIN_PLAYER_NUMBER"
                                ],
                                "Номер игрока должен быть больше или равен нулю",
                            ),
                            django.core.validators.MaxValueValidator(
                                games.constants.NumericalValues[
                                    "GAME_MAX_PLAYER_NUMBER"
                                ],
                                "Номер игрока должен быть меньше или равен 99",
                            ),
                        ],
                        verbose_name="Номер игрока",
                    ),
                ),
                (
                    "game_team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="games.gameteam",
                        verbose_name="Команда",
                    ),
                ),
            ],
            options={
                "verbose_name": "Игрок, участвующий в игре",
                "verbose_name_plural": "Игроки, участвующие в игре",
                "default_related_name": "game_players",
            },
        ),
        migrations.AddConstraint(
            model_name="gameplayer",
            constraint=models.CheckConstraint(
                check=models.Q(
                    (
                        "number__gte",
                        games.constants.NumericalValues["GAME_MIN_PLAYER_NUMBER"],
                    )
                ),
                name="player_number_must_be_positive",
            ),
        ),
        migrations.AddConstraint(
            model_name="gameplayer",
            constraint=models.CheckConstraint(
                check=models.Q(
                    (
                        "number__lte",
                        games.constants.NumericalValues["GAME_MAX_PLAYER_NUMBER"],
                    )
                ),
                name="player_number_must_be_99_or_less",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="gameplayer",
            unique_together={("name", "number")},
        ),
        migrations.AddConstraint(
            model_name="game",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("date__lte", django.db.models.functions.datetime.Now())
                ),
                name="game_date_must_not_be_in_the_future",
            ),
        ),
    ]
