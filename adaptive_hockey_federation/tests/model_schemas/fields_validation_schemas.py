CORRECT_CREATE = "correct_create"
CORRECT_UPDATE = "correct_update"


def get_range_string(start_symbol: str, end_symbol: str) -> str:
    return "".join(
        [chr(i) for i in range(ord(start_symbol), ord(end_symbol) + 1)]
    )


RUS_STRINGS = get_range_string("а", "я") + "ё"
RUS_CAPS = RUS_STRINGS.upper()
LATIN_STRINGS = get_range_string("a", "z")
LATIN_CAPS = LATIN_STRINGS.upper()
ALL_LETTERS = (
    (RUS_STRINGS, RUS_CAPS, LATIN_STRINGS, LATIN_CAPS),
    "любые буквы русского и (или) латинского алфавита",
)
ALL_RUS_LETTERS_IN_FIO = (
    RUS_STRINGS.capitalize(),
    "любые буквы русского алфавита",
)
VERY_LONG_TEXT = "Lorem ipsum dolor sit amet... Съешь еще этих мягких " * 1000
ALL_LOWER = ("василий", "начало со строчной буквы")
ALL_CAPS = ("ВАСИЛИЙ", "строка полностью из прописных букв")
SPACES = ("Салтыков Щедрин", "наличие хотя бы одного пробела")
TWO_OR_MORE_SPACES = ("Алибаба олгы моглы", "наличие двух и более пробелов")
DOUBLE_LAST_NAME = ("Петров-Водкин", "двойная фамилия через дефис")
LOWER_SECOND_LAST_NAME = ("Петров-водкин", "вторая фамилия со строчной буквы")
DOUBLE_PATRONYMIC = ("Алимамбек оглы", "двойное отчество через пробел")
MIDDLE_CAP = ("ВаСилий", "прописная буква не в начале слова")
NOT_CYR = ("Gennadiy", "некириллические символы")
FIGURES_AND_LETTERS = ("Пётр1", "цифры наряду с буквами")
LONGER_THEN_256 = (("а" * 257).capitalize(), "строка длиннее 256 символов")
LONGER_THEN_150 = (("а" * 151).capitalize(), "строка длиннее 150 символов")
LONG_256 = (("а" * 256).capitalize(), "строка длиной до 256 символов")
LONG_150 = (("а" * 150).capitalize(), "строка длиной до 150 символов")
FIGURES_ONLY = ("1234567890", "значение, состоящее только из " "цифр")
INTEGER = (1, "числовое значение поля")
FLOAT = (1.25, "дробное значение поля")
ZERO = (0, "нулевое значение поля")
NEGATIVE = (-1, "отрицательное значение поля")
NONE = (None, "пустое значение поля")
NULL = ("", "значение поля, состоящее из пустой строки")
PUNCTUATION_MARKS_EXCEPT_HYPHEN = (
    "Васи",
    tuple("~@#$%^&*()`.,\\{}\"[]<>/*+:;|!№?='"),
    "лий",
    "наличие символов пунктуации",
)
PUNCTUATION_MARKS = (
    "Васи",
    tuple("-~@#$%^&*()`.,\\{}\"[]<>/*+:;|!№?='"),
    "лий",
    "наличие символов пунктуации",
)
PUNCTUATION_MARKS_ONLY = (
    '!"№;%:?()_',
    "строка, состоящая только из знаков препинания",
)
SPACES_ONLY = ("    ", "строка, состоящая из одних пробелов")

THE_ONLY_LETTER = (tuple("ФFгg"), "строка, состоящая из единственной буквы")

THE_ONLY_CYR_LETTER = (
    tuple("АБЯЁ"),
    "строка, состоящая из одной русской буквы",
)

THE_ONLY_LATIN_LETTER = (
    tuple("ABYZ"),
    "строка, состоящая из одной латинской буквы",
)

INCORRECT_EMAIL = (
    "",
    ("adfasdf.lkj", "неправ@иль.но", "дажеблизконеемайл"),
    "",
    "невалидный адрес электронной почты",
)
UNFORESEEN_ROLE = ("Повелительмух", "непредусмотренная роль пользователя")
INCORRECT_PHONE = (
    (
        "+7 5f5 555 55 55",
        "+7 555 555-55-55",
        "+7 5555 555 55 55",
        "+7 555 5555 55 55",
        "+6 555 555 55 55",
        "-7 555 555 55 55",
        "+7_555_555 55 55",
        "+7 xxx xxx xx xx",
        "+Д 555 555 55 55",
        "+А БРА КАД-АБ-РА",
        "8_926_555@ya.ya",
        "8_926_555@55.55",
    ),
    "номер телефона в неверном формате",
)
CORRECT_PHONE = (
    (
        "+7 955 555-55-54",
        "+7 900 000-00-00",
        "+7 959 111-11-11",
        "+7 987 654-32-10",
    ),
    "правильный номер телефона",
)
CORRECT_CITY_NAMES = (
    (
        "г. Город-через-Дефис",
        "пгт. Поселок Городского Типа",
        "пос. им. В.И. Ленина",
        "Арзамас-16",
    ),
    "сложные топонимы в названии города",
)

INCORRECT_DOC_ID = (
    (
        "Паспорт 30 01 023456",
        "Паспорт АБРА КАДАБР",
        "ПаспАрт 9898 989898",
        "СвидетельствА о рождении I-ML 656565",
        "Абракадабрааб р акадабра I-ML 656565",
        "Свидетельство о брожении I-ML 656565",
    ),
    "неверный формат документа, удостоверяющего личность",
)

CORRECT_DOC_ID = (
    (
        "Паспорт 3001 023456",
        "Свидетельство о рождении I-ML 656565",
        "Свидетельство о рождении II-ML 656565",
    ),
    "документ, удостоверяющий личность, в корректном формате",
)

INCORRECT_GENDER_CHOICE = ("Оно", "некорректный пол")
INCORRECT_PLAYER_POSITION = ("Зритель", "некорректная позиция игрока")
