# Generated by Django 4.2.8 on 2023-12-14 14:00

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название', max_length=256, unique=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Город',
                'verbose_name_plural': 'Города',
            },
        ),
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название', max_length=256, unique=True, verbose_name='Название')),
                ('number', models.CharField(help_text='Номер соревнований', max_length=256, verbose_name='Номер соревнований')),
                ('date', models.DateField(help_text='Дата соревнований', verbose_name='Дата соревнований')),
                ('duration', models.IntegerField(default=0, help_text='Длительность', verbose_name='Длительность')),
                ('is_active', models.BooleanField(default=True, help_text='Активно', verbose_name='Активно')),
                ('city', models.ForeignKey(blank=True, help_text='Город', null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.city', verbose_name='Город')),
            ],
            options={
                'verbose_name': 'Соревнование',
                'verbose_name_plural': 'Соревнования',
            },
        ),
        migrations.CreateModel(
            name='Diagnosis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_name', models.CharField(help_text='Класс', max_length=10, unique=True, verbose_name='Класс')),
                ('is_wheeled', models.BooleanField(default=False, help_text='На коляске', verbose_name='На коляске')),
                ('description', models.TextField(blank=True, help_text='Описание', verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Диагноз',
                'verbose_name_plural': 'Диагнозы',
            },
        ),
        migrations.CreateModel(
            name='Discipline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название', max_length=256, unique=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Дисциплина',
                'verbose_name_plural': 'Дисциплины',
            },
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название', max_length=256, unique=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Пол',
                'verbose_name_plural': 'Пол',
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surname', models.CharField(default='--пусто--', help_text='Фамилия', max_length=256, verbose_name='Фамилия')),
                ('name', models.CharField(default='--пусто--', help_text='Имя', max_length=256, verbose_name='Имя')),
                ('patronymic', models.CharField(blank=True, default='--пусто--', help_text='Отчество', max_length=256, verbose_name='Отчество')),
                ('date_of_birth', models.DateField(blank=True, help_text='Дата рождения', null=True, verbose_name='Дата рождения')),
                ('identification_card', models.TextField(default=0, help_text='Удостоверение личности', verbose_name='Удостоверение личности')),
                ('diagnosis', models.ForeignKey(default=0, help_text='Диагноз', on_delete=django.db.models.deletion.CASCADE, related_name='diagnosis', to='main.diagnosis', verbose_name='Диагноз')),
                ('gender', models.ForeignKey(default=0, help_text='Пол', on_delete=django.db.models.deletion.CASCADE, related_name='gender', to='main.gender', verbose_name='Пол')),
            ],
            options={
                'verbose_name': 'Игрок',
                'verbose_name_plural': 'Игроки',
                'ordering': ('surname', 'name', 'patronymic'),
                'abstract': False,
                'default_related_name': 'players',
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название', max_length=256, unique=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Игоровая позиция',
                'verbose_name_plural': 'Игровые позиции',
            },
        ),
        migrations.CreateModel(
            name='Qualification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название', max_length=256, unique=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Квалификация',
                'verbose_name_plural': 'Квалификации',
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название', max_length=256, verbose_name='Название')),
                ('composition', models.CharField(default='--пусто--', help_text='Состав', max_length=256, verbose_name='Состав')),
                ('age', models.CharField(default='--пусто--', help_text='Возраст', max_length=256, verbose_name='Возраст')),
                ('city', models.ForeignKey(blank=True, help_text='Город откуда команда', null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.city', verbose_name='Город откуда команда')),
                ('discipline', models.ForeignKey(blank=True, help_text='Дисциплина команды', null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.discipline', verbose_name='Дисциплина команды')),
            ],
            options={
                'verbose_name': 'Команда',
                'verbose_name_plural': 'Команды',
                'default_related_name': 'teams',
            },
        ),
        migrations.CreateModel(
            name='Trainer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surname', models.CharField(default='--пусто--', help_text='Фамилия', max_length=256, verbose_name='Фамилия')),
                ('name', models.CharField(default='--пусто--', help_text='Имя', max_length=256, verbose_name='Имя')),
                ('patronymic', models.CharField(blank=True, default='--пусто--', help_text='Отчество', max_length=256, verbose_name='Отчество')),
                ('date_of_birth', models.DateField(blank=True, help_text='Дата рождения', null=True, verbose_name='Дата рождения')),
                ('description', models.TextField(help_text='Описание', verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Тренер',
                'verbose_name_plural': 'Тренеры',
            },
        ),
        migrations.CreateModel(
            name='TrainerTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team', models.ForeignKey(help_text='Команда', on_delete=django.db.models.deletion.CASCADE, to='main.team', verbose_name='Команда')),
                ('trainer', models.ForeignKey(help_text='Тренер команды', on_delete=django.db.models.deletion.CASCADE, to='main.trainer', verbose_name='Тренер команды')),
            ],
            options={
                'verbose_name': 'Тренер --> команда',
                'verbose_name_plural': 'Тренер --> команды',
                'default_related_name': 'trainer_teams',
            },
        ),
        migrations.CreateModel(
            name='TeamCompetition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('competition', models.ForeignKey(help_text='Соревнование', on_delete=django.db.models.deletion.CASCADE, to='main.competition', verbose_name='Соревнование')),
                ('team', models.ForeignKey(help_text='Команда', on_delete=django.db.models.deletion.CASCADE, to='main.team', verbose_name='Команда')),
            ],
            options={
                'verbose_name': 'Соревнование --> команда',
                'verbose_name_plural': 'Совревнования --> команды',
                'default_related_name': 'team_competitions',
            },
        ),
        migrations.CreateModel(
            name='PlayerTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(help_text='Номер игорока', max_length=256, verbose_name='Номер игорока')),
                ('is_captain', models.BooleanField(default=False, help_text='Капитан', verbose_name='Капитан')),
                ('is_assistent', models.BooleanField(default=False, help_text='Ассистент', verbose_name='Ассистент')),
                ('player', models.ForeignKey(help_text='Игрок', on_delete=django.db.models.deletion.CASCADE, related_name='player_teams', to='main.player', verbose_name='Игрок')),
                ('position', models.ForeignKey(blank=True, help_text='Позиция игрока', null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.position', verbose_name='Позиция игрока')),
                ('qualification', models.ForeignKey(blank=True, help_text='Квалификация игрока', null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.qualification', verbose_name='Квалификация игрока')),
                ('team', models.ForeignKey(help_text='Команда', on_delete=django.db.models.deletion.CASCADE, related_name='team_players', to='main.team', verbose_name='Команда')),
            ],
            options={
                'verbose_name': 'Игрок команды',
                'verbose_name_plural': 'Игроки команды',
            },
        ),
        migrations.AddConstraint(
            model_name='trainerteam',
            constraint=models.UniqueConstraint(fields=('trainer', 'team'), name='trainer_teams_unique'),
        ),
        migrations.AddConstraint(
            model_name='teamcompetition',
            constraint=models.UniqueConstraint(fields=('team', 'competition'), name='competition_teams_unique'),
        ),
        migrations.AddConstraint(
            model_name='team',
            constraint=models.UniqueConstraint(fields=('name', 'city', 'discipline'), name='team_city_unique'),
        ),
        migrations.AddConstraint(
            model_name='player',
            constraint=models.UniqueConstraint(fields=('name', 'surname', 'patronymic', 'date_of_birth'), name='player_unique'),
        ),
        migrations.AddConstraint(
            model_name='competition',
            constraint=models.UniqueConstraint(fields=('city', 'number', 'date'), name='competitions_unique'),
        ),
    ]
